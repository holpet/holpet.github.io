@import "../../App.scss";

div.work {
  @extend .basic-wrap;
  background-color: var(--lighterBlack-color);
  padding: var(--padding-val);
}

div.work .wrapper {
  display: flexbox;
  align-items: center;
  width: 100%;
}

div.work .code {
  @extend .code;
}
div.work .code.end {
  margin: clamp(10px, 4vw, 40px) 0;
}

div.work .title {
  font-size: clamp(1rem, 6vw, 4rem);
  font-weight: bolder;
}
div.work .title > span {
  @extend .gradient-base;
  @include gradText(120deg, 30%, 60%);
  display: inline-block;
  transform: rotate(0deg);
  transition: transform 250ms ease-in-out;
}
div.work .title > span:hover {
  transform: rotate(7deg);
}

// CONTENT ********************************************** //

div.work .work-icon-container {
  display: flex;
  justify-content: center;
  width: 100%;
}

div.work .work-icon {
  width: 25vw;
  position: relative;
  z-index: 5;
  animation: back-and-forth 5s infinite ease-in-out;
}

div.work .work-line {
  width: 4px;
  border-left: dashed 2px var(--gray-color);
  //height: set dynamically by listening to window resize event
  position: absolute;
  left: calc(50% - 2px);
  top: 10vw;
  z-index: 0;
}

// CONTAINER ********************************************** //

div.work .grid {
  display: grid;
  grid-column: 2;
  grid-template-columns: 1fr 1fr;
  column-gap: 4rem;
  row-gap: 2rem;
  width: 100%;
  position: relative;
}

div.work .grid-item {
  width: 100%;
  min-height: 10rem;
  display: flex;
  justify-content: center;
  align-items: center;
  overflow: hidden;
  position: relative;
}

@media (max-width: 600px) {
  div.work .grid {
    grid-column: 1;
    grid-template-columns: 1fr;
    //grid-auto-rows: 1fr;
  }
}

/************************** grid image section *****************************/

div.work .grid-item:nth-child(4n + 0),
div.work .grid-item:nth-child(4n + 1) {
  width: 100%;
  max-width: 100%;
  //border-radius: 2%;
}

div.work .grid-item:nth-child(4n + 1) {
  background-color: var(--primary-color);
  //left: 40%;
}
div.work .grid-item:nth-child(4n + 0) {
  background-color: var(--secondary-color);
  //right: 0;
}

/********** links *********/

div.work .grid-item:nth-child(4n + 0) .grid-title,
div.work .grid-item:nth-child(4n + 1) .grid-title {
  position: absolute;
  text-shadow: rgba(0, 0, 0, 1) 1px 1px 8px;
  font-size: clamp(1rem, 2vw, 1.3rem);
}
div.work .grid-item:nth-child(4n + 1) .grid-title {
  left: calc(37.5%);
}
div.work .grid-item:nth-child(4n + 0) .grid-title {
  right: calc(37.5%);
}

div.work .grid-item:nth-child(4n + 0) .grid-links,
div.work .grid-item:nth-child(4n + 1) .grid-links {
  width: 25%;
  height: 100%;
  display: flex;
  flex-direction: column;
  justify-content: space-evenly;
  align-items: center;
  z-index: "2";
}

div.work .grid-item:nth-child(4n + 0) .grid-links {
  background-image: linear-gradient(
    90deg,
    var(--secondary-gradDark-color),
    var(--secondary-gradLight-color)
  );
}
div.work .grid-item:nth-child(4n + 1) .grid-links {
  background-image: linear-gradient(
    300deg,
    var(--primary-gradLight-color) 5%,
    var(--primary-color) 70%
  );
}

div.work .grid-item:nth-child(4n + 0) .grid-github,
div.work .grid-item:nth-child(4n + 1) .grid-github,
div.work .grid-item:nth-child(4n + 0) .grid-url,
div.work .grid-item:nth-child(4n + 1) .grid-url {
  //background-color: var(--gray-color);
  width: 50%;
  aspect-ratio: 1 / 1;
  height: auto;
  max-width: 50px;
  border-radius: 50%;
  transition: all 0.5s;
  padding: 2px;
}

div.work .grid-item:nth-child(4n + 0) .grid-url > .eye,
div.work .grid-item:nth-child(4n + 1) .grid-url > .eye,
div.work .grid-item:nth-child(4n + 0) .grid-github > .gh,
div.work .grid-item:nth-child(4n + 1) .grid-github > .gh {
  width: 100%;
  height: 100%;
  * {
    color: var(--white-color);
  }
  filter: drop-shadow(2px 3px 8px rgba(0, 0, 0, 0.7));
  transform: scale(1);
  transition: all 300ms ease;
}

div.work .grid-item:nth-child(4n + 0) .grid-url:hover > .eye,
div.work .grid-item:nth-child(4n + 1) .grid-url:hover > .eye,
div.work .grid-item:nth-child(4n + 0) .grid-github:hover > .gh,
div.work .grid-item:nth-child(4n + 1) .grid-github:hover > .gh {
  * {
    color: var(--gray-color);
  }
  filter: drop-shadow(3px 3px 10px rgba(255, 255, 255, 0.8));
  transform: scale(1.1);
}

/********** image *********/

div.work .grid-item:nth-child(4n + 0) > .grid-image,
div.work .grid-item:nth-child(4n + 1) > .grid-image {
  background-color: var(--primary-color); // fallback color
  width: 100%;
  height: 100%;
  //background-image: set dynamically
  background-repeat: no-repeat;
  background-position: center;
  background-size: cover;
  transition: all 0.5s;
  opacity: 0.4;
}

div.work .grid-item:nth-child(4n + 0) .grid-url:hover,
div.work .grid-item:nth-child(4n + 1) .grid-url:hover,
div.work .grid-item:nth-child(4n + 0) .grid-github:hover,
div.work .grid-item:nth-child(4n + 1) .grid-github:hover {
  cursor: pointer;
}

div.work .grid-item:nth-child(4n + 0) > .grid-image:hover,
div.work .grid-item:nth-child(4n + 1) > .grid-image:hover {
  transform: scale(1.1);
  opacity: 1;
}

/************************** grid description section *****************************/

div.work .grid-item:nth-child(4n + 2),
div.work .grid-item:nth-child(4n + 3) {
  border: dashed 2px var(--gray-color);
  padding: clamp(10px, 3vw, 40px);
  background-color: var(--lighterBlack-color);
}

div.work .grid-item:nth-child(4n + 2) > div,
div.work .grid-item:nth-child(4n + 3) > div {
  background-image: none !important;
  //background-color: var(--lighterBlack-color);
  width: 100%;
  height: 100%;
}

div.work .grid-item:nth-child(4n + 2) .grid-description,
div.work .grid-item:nth-child(4n + 3) .grid-description {
  font-size: clamp(0.6rem, 1.3vw, 1.1rem);
  text-align: justify;
}

div.work .grid-item:nth-child(4n + 2) .grid-description p:first-child,
div.work .grid-item:nth-child(4n + 3) .grid-description p:first-child {
  font-size: clamp(1rem, 1.7vw, 1.5rem);
  letter-spacing: 0.1rem;
  text-transform: uppercase;
}
div.work .grid-item:nth-child(4n + 2) .grid-description p:first-child {
  color: var(--primary-color);
}
div.work .grid-item:nth-child(4n + 3) .grid-description p:first-child {
  color: var(--secondary-color);
}

div.work .grid-item:nth-child(4n + 2) .grid-description span {
  color: var(--primary-color);
}
div.work .grid-item:nth-child(4n + 3) .grid-description span {
  color: var(--secondary-color);
}

div.work .grid-item:nth-child(4n + 2) > div:nth-child(1) {
  background-color: var(--primary-color);
  width: 1.2vw;
  margin-right: clamp(10px, 3vw, 40px);
}
div.work .grid-item:nth-child(4n + 3) > div:nth-child(2) {
  background-color: var(--secondary-color);
  width: 1.2vw;
  margin-left: clamp(10px, 3vw, 40px);
}

//////////// animations /////////////

@keyframes back-and-forth {
  0% {
    transform: rotate(0deg);
  }
  25% {
    transform: rotate(10deg);
  }
  50% {
    transform: rotate(0deg);
  }
  75% {
    transform: rotate(-10deg);
  }
  100% {
    transform: rotate(0deg);
  }
}
